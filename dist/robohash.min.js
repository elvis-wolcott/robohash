export default class Robohash{static svg(t){const s=this._hash(t);return this._svgTemplate(this.colors[s[0]],this.bgColors[s[1]],s[2],s[3],s[4],s[5],s[6])}static render(t,s){s.innerHTML=this.svg(t)}static toDataUrl(t){return`data:image/svg+xml;base64,${btoa(this.svg(t))}`}static _svgTemplate(t,s,e,r,a,i,h){return this._$svg(this._$robohash(t,s,e,r,a,i,h))}static _clippedsvgTemplate(t,s,e,r,a,i,h){return this._$svg(this._$robohash(t,s,e,r,a,i,h))}static _$robohash(t,s,e,r,a,i,h){return`\n            <g style="color:${t}">\n                <rect fill="${s}" x="0" y="0" width="320" height="320"></rect>\n                ${this._$use("body",e)}\n                ${this._$use("face",r)}\n                ${this._$use("eyes",a)}\n                ${this._$use("mouth",i)}\n                ${this._$use("accessory",h)}\n            </g>`}static _$svg(t){return`\n            <svg viewBox="0 0 320 320" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/2000/xlink" >\n                ${t}\n            </svg>`}static _$use(t,s){return`<use width="320" height="300" transform="translate(0,20)" xlink:href="${location.origin}/libraries/robohash/dist/robohash.min.svg#${t}-${this._assetIndex(s)}" />`}static get colors(){return["#ff9800","#E53935","#FDD835","#3f51b5","#03a9f4","#9c27b0","#009688","#EC407A","#8bc34a","#795548"]}static get bgColors(){return["#FF8A80","#F48FB1","#ea80fc","#8c9eff","#80d8ff","#CFD8DC","#1DE9B6","#00C853","#FF9E80","#FFE57F"]}static _assetIndex(t){return(t=Number(t)+1)<10?"0"+t:t}static _hash(t){return(""+t.split("").map(t=>Number(t.charCodeAt(0))+3).reduce((t,s)=>t*(1-t)*this.__chaosHash(s),.5)).split("").reduce((t,s)=>s+t,"").substr(4,10)}static __chaosHash(t){let s=1/t;for(let t=0;t<100;t++)s=(1-s)*s*3.569956786876;return s}}
